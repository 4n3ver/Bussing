; Addresses for I/O
.NAME   ORIGIN  = 0x10
.NAME   STACKTOP= 2048
.NAME   IOBASE  = 0xF0000000
.NAME   OFSHEX  = 0x00000000
.NAME   OFSLEDR = 0x00000004
.NAME   OFSLEDG = 0x00000008
.NAME   OFSKEY  = 0x00000010
.NAME   OFSSW   = 0x00000014
.NAME   TCNT    = 0x00000020;
.NAME   TLIM    = 0x00000024;
.NAME   TCTL    = 0x00000120;


; Make sure fp always zero
.ORIG 0x40
    mvhi    sp, STACKTOP        ; setup stack
    addi    sp, sp, STACKTOP    ; setup stack
    mvhi    gp, IOBASE
    xor     fp, fp, fp          ; zero out fp
    and     t0, fp, fp          ; zero out t0
    and     t1, fp, fp          ; zero out t1
    and     a0, fp, fp
    and     a1, fp, fp
    and     a2, fp, fp
    and     a3, fp, fp
    and     s0, fp, fp
    and     s1, fp, fp
    and     s2, fp, fp
    and     r9, fp, fp
    and     r10, fp, fp
    and     r11, fp, fp
    and     ra, fp, fp
    sw      fp, OFSHEX(gp)
    sw      fp, OFSLEDG(gp)
    sw      fp, OFSLEDR(gp)

; t0 is input
SetSec:
    addi    t0, fp, 0x1
    sw      t0, OFSLEDG(gp)
    lw      t0, OFSSW(gp)       ; input = SW
    andi    t0, t0, 0xFF

    andi    s0, t0, 0xF0        ; s0 = input & 1111 0000
    lti     s0, s0, 0x60        ; s0 = (s0 < 0110 0000) ? 1 : 0
    bne     s0, fp, HiSecOk
    andi    t0, t0, 0xF
    addi    t0, t0, 0x50
HiSecOk:
    andi    s0, t0, 0xF         ; s0 = input & 1111
    lti     s0, s0, 0xA         ; s0 = (s0 < 1010) ? 1 : 0
    bne     s0, fp, LoSecOk
    andi    t0, t0, 0xF0
    addi    t0, t0, 0x9
LoSecOk:
    add     a0, t0, fp
    sw      a0, OFSHEX(gp)

WaitSecPress:
    lw      t0, OFSKEY(gp)      ; ok = KEY
    sw      t0, OFSLEDR(gp)
    andi    s0, t0, 0x1
    beq     s0, fp, SecNotRst
    sw      fp, OFSHEX(gp)
    br      SecRst
SecNotRst:
    andi    s0, t0, 0x2
    beq     s0, fp, SetSec
    br      SecSet
SecRst:
    lw      t0, OFSKEY(gp)
    andi    t0, t0, 0x1
    bne     t0, fp, SecRst
    jmp     ORIGIN(fp)
    sw      t0, OFSLEDG(gp)
SecSet:
    lw      t0, OFSKEY(gp)
    andi    t0, t0, 0x2
    bne     t0, fp, SecSet


SetMin:
    addi    t0, fp, 0x2
    sw      t0, OFSLEDG(gp)
    lw      t0, OFSSW(gp)       ; input = SW
    andi    t0, t0, 0xFF

    andi    s0, t0, 0xF0        ; s0 = input & 1111 0000
    lti     s0, s0, 0x60        ; s0 = (s0 < 0110 0000) ? 1 : 0
    bne     s0, fp, HiMinOk
    andi    t0, t0, 0xF
    addi    t0, t0, 0x50
HiMinOk:
    andi    s0, t0, 0xF         ; s0 = input & 1111
    lti     s0, s0, 0xA         ; s0 = (s0 < 1010) ? 1 : 0
    bne     s0, fp, LoMinOk
    andi    t0, t0, 0xF0
    addi    t0, t0, 0x9
LoMinOk:
    addi    s0, fp, 8
ShiftMin:
    addi    s0, s0, -1
    add     t0, t0, t0
    bne     s0, fp, ShiftMin
    add     a1, t0, fp
    add     s0, a0, a1
    sw      s0, OFSHEX(gp)

WaitMinPress:
    lw      t0, OFSKEY(gp)      ; ok = KEY
    sw      t0, OFSLEDR(gp)
    andi    s0, t0, 0x1
    beq     s0, fp, MinNotRst
    sw      fp, OFSHEX(gp)
    br      MinRst
MinNotRst:
    andi    s0, t0, 0x2
    beq     s0, fp, SetMin
    br      MinSet
MinRst:
    lw      t0, OFSKEY(gp)
    andi    t0, t0, 0x1
    bne     t0, fp, MinRst
    jmp     ORIGIN(fp)
MinSet:
    lw      t0, OFSKEY(gp)
    andi    t0, t0, 0x2
    bne     t0, fp, MinSet

; set limit
    addi    t0, fp, 1000
    sw      t0, TLIM(gp)
    add     s0, a0, a1
    sw      s0, OFSHEX(gp)
Poll:
    sw      t0, OFSLEDR(gp)
    lw      t0, TCTL(gp)
    beq     t0, fp, Poll
    sw      fp, TCTL(gp)
    sw      fp, OFSLEDR(gp)
    addi    t0, fp, 0x3
    sw      t0, OFSLEDG(gp)
    beq     a0, fp, DECMIN
    addi    a0, a0, -1
DECMIN:
    beq     a1, fp, Done
    addi    a1, a1, -1
    add     s0, a0, a1
    sw      s0, OFSHEX(gp)
    br      Poll

Done:
    ; Turn on LEDG, put FFFF on HEX, LEDR should still be off
    not     t0,fp
    sw      t0,OFSLEDG(gp)
    bt      t0,t0,Done


; a3 = msb(a0)
msb:
    addi    sp, sp, -3
    sw      s0, 0(gp)
    sw      s1, 1(gp)
    sw      s2, 2(gp)

    ; start here
    and     a3, fp, fp      ; zero out a3
    andi    s1, a0, 0xF0    ; s1 = a0[7:4]

    andi    s0, s1, 0x80    ; s0 = s1 & 1000 0000
    eqi     s0, s0, 0x80    ; s0 = (s0 == 1000 0000) ? 1 : 0
    beq     s0, fp, NEXT0   ; a3 = 0000
    addi    a3, a3, 0x8     ; a3 = 1000
NEXT0:
    andi    s0, s1, 0x40    ; s0 = s1 & 0100 0000
    eqi     s0, s0, 0x40    ; s0 = (s0 == 0100 0000) ? 1 : 0
    beq     s0, fp, NEXT1   ; a3 = X000
    addi    a3, a3, 0x4     ; a3 = X100
NEXT1:
    andi    s0, s1, 0x20    ; s0 = s1 & 0010 0000
    eqi     s0, s0, 0x20    ; s0 = (s0 == 0010 0000) ? 1 : 0
    beq     s0, fp, NEXT2   ; a3 = XX00
    addi    a3, a3, 0x2     ; a3 = XX10
NEXT2:
    andi    s0, s1, 0x10    ; s0 = s1 & 0001 0000
    eqi     s0, s0, 0x10    ; s0 = (s0 == 0001 0000) ? 1 : 0
    beq     s0, fp, NEXT3   ; a3 = XXX0
    addi    a3, a3, 0x1     ; a3 = XXX1
NEXT3:
    ; end here

    lw      s0, 0(gp)
    lw      s1, 1(gp)
    lw      s2, 2(gp)
    addi    sp, sp, 3
    ret

